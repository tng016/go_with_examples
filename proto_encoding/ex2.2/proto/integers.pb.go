// Code generated by protoc-gen-go. DO NOT EDIT.
// source: integers.proto

package integers

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SingleInteger struct {
	Integer              *uint64  `protobuf:"varint,16,opt,name=integer" json:"integer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SingleInteger) Reset()         { *m = SingleInteger{} }
func (m *SingleInteger) String() string { return proto.CompactTextString(m) }
func (*SingleInteger) ProtoMessage()    {}
func (*SingleInteger) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7d2a4376ec32b36, []int{0}
}

func (m *SingleInteger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleInteger.Unmarshal(m, b)
}
func (m *SingleInteger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleInteger.Marshal(b, m, deterministic)
}
func (m *SingleInteger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleInteger.Merge(m, src)
}
func (m *SingleInteger) XXX_Size() int {
	return xxx_messageInfo_SingleInteger.Size(m)
}
func (m *SingleInteger) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleInteger.DiscardUnknown(m)
}

var xxx_messageInfo_SingleInteger proto.InternalMessageInfo

func (m *SingleInteger) GetInteger() uint64 {
	if m != nil && m.Integer != nil {
		return *m.Integer
	}
	return 0
}

func init() {
	proto.RegisterType((*SingleInteger)(nil), "integers.SingleInteger")
}

func init() { proto.RegisterFile("integers.proto", fileDescriptor_e7d2a4376ec32b36) }

var fileDescriptor_e7d2a4376ec32b36 = []byte{
	// 71 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0xcc, 0x2b, 0x49,
	0x4d, 0x4f, 0x2d, 0x2a, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0x34,
	0xb9, 0x78, 0x83, 0x33, 0xf3, 0xd2, 0x73, 0x52, 0x3d, 0x21, 0x22, 0x42, 0x12, 0x5c, 0xec, 0x50,
	0x49, 0x09, 0x01, 0x05, 0x46, 0x0d, 0x96, 0x20, 0x18, 0x17, 0x10, 0x00, 0x00, 0xff, 0xff, 0xbd,
	0xa1, 0x5e, 0xc4, 0x45, 0x00, 0x00, 0x00,
}
